{"name": "Проверка перехода в раздел \"История заказов\"", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <a class=\"AppHeader_header__link__3D_hX\" href=\"/account\"> is not clickable at point (1168,44) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31", "trace": "self = <tests.test_profile.TestProfilePage object at 0x000002C8CFFE3B30>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"1623985f-3ed8-4a61-b992-735c586b95d6\")>\nuser = {'access_token': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NDI1Y2Q0OWVkMjgwMDAxYjQwZjQ5ZCIsImlhdCI6MTcx...XbfTj68YFg5mC9jG746SVETKvj7LmXlXWadM', 'email': '3iq1imxjpv@yandex.ru', 'name': 'x0yg56ysob', 'password': 'iwlgp2cwvq'}\n\n    @allure.title('Проверка перехода в раздел \"История заказов\"')\n    def test_open_order_history(self, driver, user):\n        main_page = MainPage(driver)\n        login_page = LoginPage(driver)\n        profile_page = ProfilePage(driver)\n    \n        driver.get(urls.LOGIN_PAGE)\n        login_page.fill_user_data_form(user['email'], user['password'])\n>       main_page.click_profile_link()\n\ntests\\test_profile.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\main_page.py:15: in click_profile_link\n    self.click_on_element(MainPageLocators.PROFILE_LINK)\npages\\base_page.py:19: in click_on_element\n    element = self.driver.find_element(*locator).click()\n..\\..\\Diplom\\Diplom_2\\Diplom_3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\Diplom\\Diplom_2\\Diplom_3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n..\\..\\Diplom\\Diplom_2\\Diplom_3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002C8D062D0A0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"Element <a class=\\\\\"AppHeader_heade...sys.mjs:204:29\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: Element <a class=\"AppHeader_header__link__3D_hX\" href=\"/account\"> is not clickable at point (1168,44) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       ElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nE       webdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\nE       interaction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nE       clickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\n\n..\\..\\Diplom\\Diplom_2\\Diplom_3\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "Заполняем форму авторизации пользователя", "status": "passed", "steps": [{"name": "Заполняем поле ", "status": "passed", "parameters": [{"name": "email", "value": "'3iq1imxjpv@yandex.ru'"}], "start": 1715625175493, "stop": 1715625175558}, {"name": "Заполняем поле \"Пароль\"", "status": "passed", "parameters": [{"name": "password", "value": "'iwlgp2cwvq'"}], "start": 1715625175558, "stop": 1715625175589}], "parameters": [{"name": "email", "value": "'3iq1imxjpv@yandex.ru'"}, {"name": "password", "value": "'iwlgp2cwvq'"}], "start": 1715625175493, "stop": 1715625175836}, {"name": "Нажимаем на кнопку Личный кабинет", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <a class=\"AppHeader_header__link__3D_hX\" href=\"/account\"> is not clickable at point (1168,44) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\n\n", "trace": "  File \"C:\\Users\\ADrozdovskaia\\PycharmProjects\\Diplom\\Diplom_2\\Diplom_3\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\ADrozdovskaia\\PycharmProjects\\Diplom_Anastasiia_Drozdovskaia_6\\Diplom_3\\pages\\main_page.py\", line 15, in click_profile_link\n    self.click_on_element(MainPageLocators.PROFILE_LINK)\n  File \"C:\\Users\\ADrozdovskaia\\PycharmProjects\\Diplom_Anastasiia_Drozdovskaia_6\\Diplom_3\\pages\\base_page.py\", line 19, in click_on_element\n    element = self.driver.find_element(*locator).click()\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\ADrozdovskaia\\PycharmProjects\\Diplom\\Diplom_2\\Diplom_3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\ADrozdovskaia\\PycharmProjects\\Diplom\\Diplom_2\\Diplom_3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\ADrozdovskaia\\PycharmProjects\\Diplom\\Diplom_2\\Diplom_3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\ADrozdovskaia\\PycharmProjects\\Diplom\\Diplom_2\\Diplom_3\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1715625175836, "stop": 1715625176034}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1715625173175, "stop": 1715625176035, "uuid": "6a257143-5499-4bee-bf11-bb0fcb94c948", "historyId": "085ae9029dcdc81ce513213299d0bca0", "testCaseId": "3a0cfb35338864586f4ae768ff3a3b11", "fullName": "tests.test_profile.TestProfilePage#test_open_order_history", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_profile"}, {"name": "subSuite", "value": "TestProfilePage"}, {"name": "host", "value": "PC_MSK-30695"}, {"name": "thread", "value": "38168-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_profile"}]}